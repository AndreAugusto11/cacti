/*
Hyperledger Cactus Plugin - Carbon Credit

Implementation for Carbon Credit Plugin logic

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-carbon-credit

import (
	"encoding/json"
)

// checks if the GetAvailableVCUsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAvailableVCUsRequest{}

// GetAvailableVCUsRequest struct for GetAvailableVCUsRequest
type GetAvailableVCUsRequest struct {
	Platform string `json:"platform"`
	FilterCriteria *string `json:"filterCriteria,omitempty"`
	OrderBy *string `json:"orderBy,omitempty"`
	Limit *string `json:"limit,omitempty"`
}

// NewGetAvailableVCUsRequest instantiates a new GetAvailableVCUsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAvailableVCUsRequest(platform string) *GetAvailableVCUsRequest {
	this := GetAvailableVCUsRequest{}
	this.Platform = platform
	return &this
}

// NewGetAvailableVCUsRequestWithDefaults instantiates a new GetAvailableVCUsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAvailableVCUsRequestWithDefaults() *GetAvailableVCUsRequest {
	this := GetAvailableVCUsRequest{}
	return &this
}

// GetPlatform returns the Platform field value
func (o *GetAvailableVCUsRequest) GetPlatform() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Platform
}

// GetPlatformOk returns a tuple with the Platform field value
// and a boolean to check if the value has been set.
func (o *GetAvailableVCUsRequest) GetPlatformOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Platform, true
}

// SetPlatform sets field value
func (o *GetAvailableVCUsRequest) SetPlatform(v string) {
	o.Platform = v
}

// GetFilterCriteria returns the FilterCriteria field value if set, zero value otherwise.
func (o *GetAvailableVCUsRequest) GetFilterCriteria() string {
	if o == nil || IsNil(o.FilterCriteria) {
		var ret string
		return ret
	}
	return *o.FilterCriteria
}

// GetFilterCriteriaOk returns a tuple with the FilterCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAvailableVCUsRequest) GetFilterCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.FilterCriteria) {
		return nil, false
	}
	return o.FilterCriteria, true
}

// HasFilterCriteria returns a boolean if a field has been set.
func (o *GetAvailableVCUsRequest) HasFilterCriteria() bool {
	if o != nil && !IsNil(o.FilterCriteria) {
		return true
	}

	return false
}

// SetFilterCriteria gets a reference to the given string and assigns it to the FilterCriteria field.
func (o *GetAvailableVCUsRequest) SetFilterCriteria(v string) {
	o.FilterCriteria = &v
}

// GetOrderBy returns the OrderBy field value if set, zero value otherwise.
func (o *GetAvailableVCUsRequest) GetOrderBy() string {
	if o == nil || IsNil(o.OrderBy) {
		var ret string
		return ret
	}
	return *o.OrderBy
}

// GetOrderByOk returns a tuple with the OrderBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAvailableVCUsRequest) GetOrderByOk() (*string, bool) {
	if o == nil || IsNil(o.OrderBy) {
		return nil, false
	}
	return o.OrderBy, true
}

// HasOrderBy returns a boolean if a field has been set.
func (o *GetAvailableVCUsRequest) HasOrderBy() bool {
	if o != nil && !IsNil(o.OrderBy) {
		return true
	}

	return false
}

// SetOrderBy gets a reference to the given string and assigns it to the OrderBy field.
func (o *GetAvailableVCUsRequest) SetOrderBy(v string) {
	o.OrderBy = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *GetAvailableVCUsRequest) GetLimit() string {
	if o == nil || IsNil(o.Limit) {
		var ret string
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAvailableVCUsRequest) GetLimitOk() (*string, bool) {
	if o == nil || IsNil(o.Limit) {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *GetAvailableVCUsRequest) HasLimit() bool {
	if o != nil && !IsNil(o.Limit) {
		return true
	}

	return false
}

// SetLimit gets a reference to the given string and assigns it to the Limit field.
func (o *GetAvailableVCUsRequest) SetLimit(v string) {
	o.Limit = &v
}

func (o GetAvailableVCUsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAvailableVCUsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["platform"] = o.Platform
	if !IsNil(o.FilterCriteria) {
		toSerialize["filterCriteria"] = o.FilterCriteria
	}
	if !IsNil(o.OrderBy) {
		toSerialize["orderBy"] = o.OrderBy
	}
	if !IsNil(o.Limit) {
		toSerialize["limit"] = o.Limit
	}
	return toSerialize, nil
}

type NullableGetAvailableVCUsRequest struct {
	value *GetAvailableVCUsRequest
	isSet bool
}

func (v NullableGetAvailableVCUsRequest) Get() *GetAvailableVCUsRequest {
	return v.value
}

func (v *NullableGetAvailableVCUsRequest) Set(val *GetAvailableVCUsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAvailableVCUsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAvailableVCUsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAvailableVCUsRequest(val *GetAvailableVCUsRequest) *NullableGetAvailableVCUsRequest {
	return &NullableGetAvailableVCUsRequest{value: val, isSet: true}
}

func (v NullableGetAvailableVCUsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAvailableVCUsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


