/*
Hyperledger Cactus Plugin - Carbon Credit

Implementation for Carbon Credit Plugin logic

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RandomBuyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RandomBuyResponse{}

// RandomBuyResponse struct for RandomBuyResponse
type RandomBuyResponse struct {
	TxHashSwap string `json:"txHashSwap"`
	AssetAmount string `json:"assetAmount"`
	Tco2List []SpecificBuyResponseAssetAmountsInner `json:"tco2List,omitempty"`
}

// NewRandomBuyResponse instantiates a new RandomBuyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRandomBuyResponse(txHashSwap string, assetAmount string) *RandomBuyResponse {
	this := RandomBuyResponse{}
	this.TxHashSwap = txHashSwap
	this.AssetAmount = assetAmount
	return &this
}

// NewRandomBuyResponseWithDefaults instantiates a new RandomBuyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRandomBuyResponseWithDefaults() *RandomBuyResponse {
	this := RandomBuyResponse{}
	return &this
}

// GetTxHashSwap returns the TxHashSwap field value
func (o *RandomBuyResponse) GetTxHashSwap() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxHashSwap
}

// GetTxHashSwapOk returns a tuple with the TxHashSwap field value
// and a boolean to check if the value has been set.
func (o *RandomBuyResponse) GetTxHashSwapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxHashSwap, true
}

// SetTxHashSwap sets field value
func (o *RandomBuyResponse) SetTxHashSwap(v string) {
	o.TxHashSwap = v
}

// GetAssetAmount returns the AssetAmount field value
func (o *RandomBuyResponse) GetAssetAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssetAmount
}

// GetAssetAmountOk returns a tuple with the AssetAmount field value
// and a boolean to check if the value has been set.
func (o *RandomBuyResponse) GetAssetAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssetAmount, true
}

// SetAssetAmount sets field value
func (o *RandomBuyResponse) SetAssetAmount(v string) {
	o.AssetAmount = v
}

// GetTco2List returns the Tco2List field value if set, zero value otherwise.
func (o *RandomBuyResponse) GetTco2List() []SpecificBuyResponseAssetAmountsInner {
	if o == nil || IsNil(o.Tco2List) {
		var ret []SpecificBuyResponseAssetAmountsInner
		return ret
	}
	return o.Tco2List
}

// GetTco2ListOk returns a tuple with the Tco2List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RandomBuyResponse) GetTco2ListOk() ([]SpecificBuyResponseAssetAmountsInner, bool) {
	if o == nil || IsNil(o.Tco2List) {
		return nil, false
	}
	return o.Tco2List, true
}

// HasTco2List returns a boolean if a field has been set.
func (o *RandomBuyResponse) HasTco2List() bool {
	if o != nil && !IsNil(o.Tco2List) {
		return true
	}

	return false
}

// SetTco2List gets a reference to the given []SpecificBuyResponseAssetAmountsInner and assigns it to the Tco2List field.
func (o *RandomBuyResponse) SetTco2List(v []SpecificBuyResponseAssetAmountsInner) {
	o.Tco2List = v
}

func (o RandomBuyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RandomBuyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["txHashSwap"] = o.TxHashSwap
	toSerialize["assetAmount"] = o.AssetAmount
	if !IsNil(o.Tco2List) {
		toSerialize["tco2List"] = o.Tco2List
	}
	return toSerialize, nil
}

type NullableRandomBuyResponse struct {
	value *RandomBuyResponse
	isSet bool
}

func (v NullableRandomBuyResponse) Get() *RandomBuyResponse {
	return v.value
}

func (v *NullableRandomBuyResponse) Set(val *RandomBuyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRandomBuyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRandomBuyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRandomBuyResponse(val *RandomBuyResponse) *NullableRandomBuyResponse {
	return &NullableRandomBuyResponse{value: val, isSet: true}
}

func (v NullableRandomBuyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRandomBuyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


