/*
Hyperledger Cactus Plugin - Carbon Credit

Implementation for Carbon Credit Plugin logic

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-carbon-credit

import (
	"encoding/json"
)

// checks if the SpecificBuyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpecificBuyResponse{}

// SpecificBuyResponse struct for SpecificBuyResponse
type SpecificBuyResponse struct {
	TxHashSwap string `json:"txHashSwap"`
	BuyTxHash string `json:"buyTxHash"`
	AssetAmounts []SpecificBuyResponseAssetAmountsInner `json:"assetAmounts"`
}

// NewSpecificBuyResponse instantiates a new SpecificBuyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpecificBuyResponse(txHashSwap string, buyTxHash string, assetAmounts []SpecificBuyResponseAssetAmountsInner) *SpecificBuyResponse {
	this := SpecificBuyResponse{}
	this.TxHashSwap = txHashSwap
	this.BuyTxHash = buyTxHash
	this.AssetAmounts = assetAmounts
	return &this
}

// NewSpecificBuyResponseWithDefaults instantiates a new SpecificBuyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpecificBuyResponseWithDefaults() *SpecificBuyResponse {
	this := SpecificBuyResponse{}
	return &this
}

// GetTxHashSwap returns the TxHashSwap field value
func (o *SpecificBuyResponse) GetTxHashSwap() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxHashSwap
}

// GetTxHashSwapOk returns a tuple with the TxHashSwap field value
// and a boolean to check if the value has been set.
func (o *SpecificBuyResponse) GetTxHashSwapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxHashSwap, true
}

// SetTxHashSwap sets field value
func (o *SpecificBuyResponse) SetTxHashSwap(v string) {
	o.TxHashSwap = v
}

// GetBuyTxHash returns the BuyTxHash field value
func (o *SpecificBuyResponse) GetBuyTxHash() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BuyTxHash
}

// GetBuyTxHashOk returns a tuple with the BuyTxHash field value
// and a boolean to check if the value has been set.
func (o *SpecificBuyResponse) GetBuyTxHashOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BuyTxHash, true
}

// SetBuyTxHash sets field value
func (o *SpecificBuyResponse) SetBuyTxHash(v string) {
	o.BuyTxHash = v
}

// GetAssetAmounts returns the AssetAmounts field value
func (o *SpecificBuyResponse) GetAssetAmounts() []SpecificBuyResponseAssetAmountsInner {
	if o == nil {
		var ret []SpecificBuyResponseAssetAmountsInner
		return ret
	}

	return o.AssetAmounts
}

// GetAssetAmountsOk returns a tuple with the AssetAmounts field value
// and a boolean to check if the value has been set.
func (o *SpecificBuyResponse) GetAssetAmountsOk() ([]SpecificBuyResponseAssetAmountsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssetAmounts, true
}

// SetAssetAmounts sets field value
func (o *SpecificBuyResponse) SetAssetAmounts(v []SpecificBuyResponseAssetAmountsInner) {
	o.AssetAmounts = v
}

func (o SpecificBuyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpecificBuyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["txHashSwap"] = o.TxHashSwap
	toSerialize["buyTxHash"] = o.BuyTxHash
	toSerialize["assetAmounts"] = o.AssetAmounts
	return toSerialize, nil
}

type NullableSpecificBuyResponse struct {
	value *SpecificBuyResponse
	isSet bool
}

func (v NullableSpecificBuyResponse) Get() *SpecificBuyResponse {
	return v.value
}

func (v *NullableSpecificBuyResponse) Set(val *SpecificBuyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSpecificBuyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSpecificBuyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpecificBuyResponse(val *SpecificBuyResponse) *NullableSpecificBuyResponse {
	return &NullableSpecificBuyResponse{value: val, isSet: true}
}

func (v NullableSpecificBuyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpecificBuyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


