/*
Hyperledger Cactus Plugin - Carbon Credit

Implementation for Carbon Credit Plugin logic

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-carbon-credit

import (
	"encoding/json"
)

// checks if the RetireResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetireResponse{}

// RetireResponse struct for RetireResponse
type RetireResponse struct {
	TxHashRetires []string `json:"txHashRetires"`
	RetirementCertificateIds []float32 `json:"retirementCertificateIds,omitempty"`
}

// NewRetireResponse instantiates a new RetireResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetireResponse(txHashRetires []string) *RetireResponse {
	this := RetireResponse{}
	this.TxHashRetires = txHashRetires
	return &this
}

// NewRetireResponseWithDefaults instantiates a new RetireResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetireResponseWithDefaults() *RetireResponse {
	this := RetireResponse{}
	return &this
}

// GetTxHashRetires returns the TxHashRetires field value
func (o *RetireResponse) GetTxHashRetires() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TxHashRetires
}

// GetTxHashRetiresOk returns a tuple with the TxHashRetires field value
// and a boolean to check if the value has been set.
func (o *RetireResponse) GetTxHashRetiresOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TxHashRetires, true
}

// SetTxHashRetires sets field value
func (o *RetireResponse) SetTxHashRetires(v []string) {
	o.TxHashRetires = v
}

// GetRetirementCertificateIds returns the RetirementCertificateIds field value if set, zero value otherwise.
func (o *RetireResponse) GetRetirementCertificateIds() []float32 {
	if o == nil || IsNil(o.RetirementCertificateIds) {
		var ret []float32
		return ret
	}
	return o.RetirementCertificateIds
}

// GetRetirementCertificateIdsOk returns a tuple with the RetirementCertificateIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetireResponse) GetRetirementCertificateIdsOk() ([]float32, bool) {
	if o == nil || IsNil(o.RetirementCertificateIds) {
		return nil, false
	}
	return o.RetirementCertificateIds, true
}

// HasRetirementCertificateIds returns a boolean if a field has been set.
func (o *RetireResponse) HasRetirementCertificateIds() bool {
	if o != nil && !IsNil(o.RetirementCertificateIds) {
		return true
	}

	return false
}

// SetRetirementCertificateIds gets a reference to the given []float32 and assigns it to the RetirementCertificateIds field.
func (o *RetireResponse) SetRetirementCertificateIds(v []float32) {
	o.RetirementCertificateIds = v
}

func (o RetireResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetireResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["txHashRetires"] = o.TxHashRetires
	if !IsNil(o.RetirementCertificateIds) {
		toSerialize["retirementCertificateIds"] = o.RetirementCertificateIds
	}
	return toSerialize, nil
}

type NullableRetireResponse struct {
	value *RetireResponse
	isSet bool
}

func (v NullableRetireResponse) Get() *RetireResponse {
	return v.value
}

func (v *NullableRetireResponse) Set(val *RetireResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRetireResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRetireResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetireResponse(val *RetireResponse) *NullableRetireResponse {
	return &NullableRetireResponse{value: val, isSet: true}
}

func (v NullableRetireResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetireResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


