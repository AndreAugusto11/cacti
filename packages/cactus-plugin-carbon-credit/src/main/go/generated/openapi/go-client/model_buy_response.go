/*
Hyperledger Cactus Plugin - Carbon Credit

Implementation for Carbon Credit Plugin logic

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-carbon-credit

import (
	"encoding/json"
)

// checks if the BuyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BuyResponse{}

// BuyResponse struct for BuyResponse
type BuyResponse struct {
	TxHashSwap string `json:"txHashSwap"`
	PoolTokenAmount string `json:"poolTokenAmount"`
	Tco2List []string `json:"tco2List,omitempty"`
}

// NewBuyResponse instantiates a new BuyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuyResponse(txHashSwap string, poolTokenAmount string) *BuyResponse {
	this := BuyResponse{}
	this.TxHashSwap = txHashSwap
	this.PoolTokenAmount = poolTokenAmount
	return &this
}

// NewBuyResponseWithDefaults instantiates a new BuyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuyResponseWithDefaults() *BuyResponse {
	this := BuyResponse{}
	return &this
}

// GetTxHashSwap returns the TxHashSwap field value
func (o *BuyResponse) GetTxHashSwap() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TxHashSwap
}

// GetTxHashSwapOk returns a tuple with the TxHashSwap field value
// and a boolean to check if the value has been set.
func (o *BuyResponse) GetTxHashSwapOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TxHashSwap, true
}

// SetTxHashSwap sets field value
func (o *BuyResponse) SetTxHashSwap(v string) {
	o.TxHashSwap = v
}

// GetPoolTokenAmount returns the PoolTokenAmount field value
func (o *BuyResponse) GetPoolTokenAmount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PoolTokenAmount
}

// GetPoolTokenAmountOk returns a tuple with the PoolTokenAmount field value
// and a boolean to check if the value has been set.
func (o *BuyResponse) GetPoolTokenAmountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolTokenAmount, true
}

// SetPoolTokenAmount sets field value
func (o *BuyResponse) SetPoolTokenAmount(v string) {
	o.PoolTokenAmount = v
}

// GetTco2List returns the Tco2List field value if set, zero value otherwise.
func (o *BuyResponse) GetTco2List() []string {
	if o == nil || IsNil(o.Tco2List) {
		var ret []string
		return ret
	}
	return o.Tco2List
}

// GetTco2ListOk returns a tuple with the Tco2List field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuyResponse) GetTco2ListOk() ([]string, bool) {
	if o == nil || IsNil(o.Tco2List) {
		return nil, false
	}
	return o.Tco2List, true
}

// HasTco2List returns a boolean if a field has been set.
func (o *BuyResponse) HasTco2List() bool {
	if o != nil && !IsNil(o.Tco2List) {
		return true
	}

	return false
}

// SetTco2List gets a reference to the given []string and assigns it to the Tco2List field.
func (o *BuyResponse) SetTco2List(v []string) {
	o.Tco2List = v
}

func (o BuyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BuyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["txHashSwap"] = o.TxHashSwap
	toSerialize["poolTokenAmount"] = o.PoolTokenAmount
	if !IsNil(o.Tco2List) {
		toSerialize["tco2List"] = o.Tco2List
	}
	return toSerialize, nil
}

type NullableBuyResponse struct {
	value *BuyResponse
	isSet bool
}

func (v NullableBuyResponse) Get() *BuyResponse {
	return v.value
}

func (v *NullableBuyResponse) Set(val *BuyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBuyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBuyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuyResponse(val *BuyResponse) *NullableBuyResponse {
	return &NullableBuyResponse{value: val, isSet: true}
}

func (v NullableBuyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


