/*
Hyperledger Cactus Plugin - Carbon Credit

Implementation for Carbon Credit Plugin logic

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cactus-plugin-carbon-credit

import (
	"encoding/json"
)

// checks if the NetworkConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkConfig{}

// NetworkConfig struct for NetworkConfig
type NetworkConfig struct {
	RpcUrl string `json:"rpcUrl"`
	Network Network `json:"network"`
}

// NewNetworkConfig instantiates a new NetworkConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkConfig(rpcUrl string, network Network) *NetworkConfig {
	this := NetworkConfig{}
	this.RpcUrl = rpcUrl
	this.Network = network
	return &this
}

// NewNetworkConfigWithDefaults instantiates a new NetworkConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkConfigWithDefaults() *NetworkConfig {
	this := NetworkConfig{}
	return &this
}

// GetRpcUrl returns the RpcUrl field value
func (o *NetworkConfig) GetRpcUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RpcUrl
}

// GetRpcUrlOk returns a tuple with the RpcUrl field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetRpcUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RpcUrl, true
}

// SetRpcUrl sets field value
func (o *NetworkConfig) SetRpcUrl(v string) {
	o.RpcUrl = v
}

// GetNetwork returns the Network field value
func (o *NetworkConfig) GetNetwork() Network {
	if o == nil {
		var ret Network
		return ret
	}

	return o.Network
}

// GetNetworkOk returns a tuple with the Network field value
// and a boolean to check if the value has been set.
func (o *NetworkConfig) GetNetworkOk() (*Network, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Network, true
}

// SetNetwork sets field value
func (o *NetworkConfig) SetNetwork(v Network) {
	o.Network = v
}

func (o NetworkConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["rpcUrl"] = o.RpcUrl
	toSerialize["network"] = o.Network
	return toSerialize, nil
}

type NullableNetworkConfig struct {
	value *NetworkConfig
	isSet bool
}

func (v NullableNetworkConfig) Get() *NetworkConfig {
	return v.value
}

func (v *NullableNetworkConfig) Set(val *NetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkConfig(val *NetworkConfig) *NullableNetworkConfig {
	return &NullableNetworkConfig{value: val, isSet: true}
}

func (v NullableNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


