/*
Hyperledger Cactus Plugin - Carbon Credit

Implementation for Carbon Credit Plugin logic

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetAvailableTCO2sResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAvailableTCO2sResponse{}

// GetAvailableTCO2sResponse struct for GetAvailableTCO2sResponse
type GetAvailableTCO2sResponse struct {
	Tco2List []GetAvailableTCO2sResponseTco2ListInner `json:"tco2List"`
	TotalCount float32 `json:"totalCount"`
}

// NewGetAvailableTCO2sResponse instantiates a new GetAvailableTCO2sResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAvailableTCO2sResponse(tco2List []GetAvailableTCO2sResponseTco2ListInner, totalCount float32) *GetAvailableTCO2sResponse {
	this := GetAvailableTCO2sResponse{}
	this.Tco2List = tco2List
	this.TotalCount = totalCount
	return &this
}

// NewGetAvailableTCO2sResponseWithDefaults instantiates a new GetAvailableTCO2sResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAvailableTCO2sResponseWithDefaults() *GetAvailableTCO2sResponse {
	this := GetAvailableTCO2sResponse{}
	return &this
}

// GetTco2List returns the Tco2List field value
func (o *GetAvailableTCO2sResponse) GetTco2List() []GetAvailableTCO2sResponseTco2ListInner {
	if o == nil {
		var ret []GetAvailableTCO2sResponseTco2ListInner
		return ret
	}

	return o.Tco2List
}

// GetTco2ListOk returns a tuple with the Tco2List field value
// and a boolean to check if the value has been set.
func (o *GetAvailableTCO2sResponse) GetTco2ListOk() ([]GetAvailableTCO2sResponseTco2ListInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tco2List, true
}

// SetTco2List sets field value
func (o *GetAvailableTCO2sResponse) SetTco2List(v []GetAvailableTCO2sResponseTco2ListInner) {
	o.Tco2List = v
}

// GetTotalCount returns the TotalCount field value
func (o *GetAvailableTCO2sResponse) GetTotalCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *GetAvailableTCO2sResponse) GetTotalCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *GetAvailableTCO2sResponse) SetTotalCount(v float32) {
	o.TotalCount = v
}

func (o GetAvailableTCO2sResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAvailableTCO2sResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tco2List"] = o.Tco2List
	toSerialize["totalCount"] = o.TotalCount
	return toSerialize, nil
}

type NullableGetAvailableTCO2sResponse struct {
	value *GetAvailableTCO2sResponse
	isSet bool
}

func (v NullableGetAvailableTCO2sResponse) Get() *GetAvailableTCO2sResponse {
	return v.value
}

func (v *NullableGetAvailableTCO2sResponse) Set(val *GetAvailableTCO2sResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAvailableTCO2sResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAvailableTCO2sResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAvailableTCO2sResponse(val *GetAvailableTCO2sResponse) *NullableGetAvailableTCO2sResponse {
	return &NullableGetAvailableTCO2sResponse{value: val, isSet: true}
}

func (v NullableGetAvailableTCO2sResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAvailableTCO2sResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


