/*
SATP Gateway Client (Business Logic Orchestrator)

SATP is a protocol operating between two gateways that conducts the transfer of a digital asset from one gateway to another. The protocol establishes a secure channel between the endpoints and implements a 2-phase commit to ensure the properties of transfer atomicity, consistency, isolation and durability.  This API defines the gateway client facing API (business logic orchestrator, or BLO), which is named API-Type 1 in the SATP-Core specification.  **Additional Resources**: - [Proposed SATP Charter](https://datatracker.ietf.org/doc/charter-ietf-satp/) - [SATP Core draft](https://datatracker.ietf.org/doc/draft-ietf-satp-core) - [SATP Crash Recovery draft](https://datatracker.ietf.org/doc/draft-belchior-satp-gateway-recovery/) - [SATP Architecture draft](https://datatracker.ietf.org/doc/draft-ietf-satp-architecture/) - [SATP Use-Cases draft](https://datatracker.ietf.org/doc/draft-ramakrishna-sat-use-cases/) - [SATP Data sharing draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-data-sharing) - [SATP View Addresses draft](https://datatracker.ietf.org/doc/draft-ramakrishna-satp-views-addresses)

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package generated

import (
	"encoding/json"
)

// checks if the OracleStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OracleStatusResponse{}

// OracleStatusResponse Response schema for checking the status of a data transfer task.
type OracleStatusResponse struct {
	// The unique identifier for the context of the data transfer task.
	TaskID *string `json:"taskID,omitempty"`
	OriginNetwork *Transact200ResponseStatusResponseOriginNetwork `json:"originNetwork,omitempty"`
	DestinationNetwork *Transact200ResponseStatusResponseDestinationNetwork `json:"destinationNetwork,omitempty"`
	OriginContract *OracleStatusRequest200ResponseOriginContract `json:"originContract,omitempty"`
	DestinationContract *OracleStatusRequest200ResponseDestinationContract `json:"destinationContract,omitempty"`
	EventOfInterest *OracleStatusRequest200ResponseEventOfInterest `json:"eventOfInterest,omitempty"`
	WriteFunction *OracleStatusRequest200ResponseWriteFunction `json:"writeFunction,omitempty"`
	Tasks []OracleStatusRequest200ResponseTasksInner `json:"tasks,omitempty"`
	// The status of the data transfer task.
	Status *string `json:"status,omitempty"`
}

// NewOracleStatusResponse instantiates a new OracleStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOracleStatusResponse() *OracleStatusResponse {
	this := OracleStatusResponse{}
	return &this
}

// NewOracleStatusResponseWithDefaults instantiates a new OracleStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOracleStatusResponseWithDefaults() *OracleStatusResponse {
	this := OracleStatusResponse{}
	return &this
}

// GetTaskID returns the TaskID field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetTaskID() string {
	if o == nil || IsNil(o.TaskID) {
		var ret string
		return ret
	}
	return *o.TaskID
}

// GetTaskIDOk returns a tuple with the TaskID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetTaskIDOk() (*string, bool) {
	if o == nil || IsNil(o.TaskID) {
		return nil, false
	}
	return o.TaskID, true
}

// HasTaskID returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasTaskID() bool {
	if o != nil && !IsNil(o.TaskID) {
		return true
	}

	return false
}

// SetTaskID gets a reference to the given string and assigns it to the TaskID field.
func (o *OracleStatusResponse) SetTaskID(v string) {
	o.TaskID = &v
}

// GetOriginNetwork returns the OriginNetwork field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetOriginNetwork() Transact200ResponseStatusResponseOriginNetwork {
	if o == nil || IsNil(o.OriginNetwork) {
		var ret Transact200ResponseStatusResponseOriginNetwork
		return ret
	}
	return *o.OriginNetwork
}

// GetOriginNetworkOk returns a tuple with the OriginNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetOriginNetworkOk() (*Transact200ResponseStatusResponseOriginNetwork, bool) {
	if o == nil || IsNil(o.OriginNetwork) {
		return nil, false
	}
	return o.OriginNetwork, true
}

// HasOriginNetwork returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasOriginNetwork() bool {
	if o != nil && !IsNil(o.OriginNetwork) {
		return true
	}

	return false
}

// SetOriginNetwork gets a reference to the given Transact200ResponseStatusResponseOriginNetwork and assigns it to the OriginNetwork field.
func (o *OracleStatusResponse) SetOriginNetwork(v Transact200ResponseStatusResponseOriginNetwork) {
	o.OriginNetwork = &v
}

// GetDestinationNetwork returns the DestinationNetwork field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetDestinationNetwork() Transact200ResponseStatusResponseDestinationNetwork {
	if o == nil || IsNil(o.DestinationNetwork) {
		var ret Transact200ResponseStatusResponseDestinationNetwork
		return ret
	}
	return *o.DestinationNetwork
}

// GetDestinationNetworkOk returns a tuple with the DestinationNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetDestinationNetworkOk() (*Transact200ResponseStatusResponseDestinationNetwork, bool) {
	if o == nil || IsNil(o.DestinationNetwork) {
		return nil, false
	}
	return o.DestinationNetwork, true
}

// HasDestinationNetwork returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasDestinationNetwork() bool {
	if o != nil && !IsNil(o.DestinationNetwork) {
		return true
	}

	return false
}

// SetDestinationNetwork gets a reference to the given Transact200ResponseStatusResponseDestinationNetwork and assigns it to the DestinationNetwork field.
func (o *OracleStatusResponse) SetDestinationNetwork(v Transact200ResponseStatusResponseDestinationNetwork) {
	o.DestinationNetwork = &v
}

// GetOriginContract returns the OriginContract field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetOriginContract() OracleStatusRequest200ResponseOriginContract {
	if o == nil || IsNil(o.OriginContract) {
		var ret OracleStatusRequest200ResponseOriginContract
		return ret
	}
	return *o.OriginContract
}

// GetOriginContractOk returns a tuple with the OriginContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetOriginContractOk() (*OracleStatusRequest200ResponseOriginContract, bool) {
	if o == nil || IsNil(o.OriginContract) {
		return nil, false
	}
	return o.OriginContract, true
}

// HasOriginContract returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasOriginContract() bool {
	if o != nil && !IsNil(o.OriginContract) {
		return true
	}

	return false
}

// SetOriginContract gets a reference to the given OracleStatusRequest200ResponseOriginContract and assigns it to the OriginContract field.
func (o *OracleStatusResponse) SetOriginContract(v OracleStatusRequest200ResponseOriginContract) {
	o.OriginContract = &v
}

// GetDestinationContract returns the DestinationContract field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetDestinationContract() OracleStatusRequest200ResponseDestinationContract {
	if o == nil || IsNil(o.DestinationContract) {
		var ret OracleStatusRequest200ResponseDestinationContract
		return ret
	}
	return *o.DestinationContract
}

// GetDestinationContractOk returns a tuple with the DestinationContract field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetDestinationContractOk() (*OracleStatusRequest200ResponseDestinationContract, bool) {
	if o == nil || IsNil(o.DestinationContract) {
		return nil, false
	}
	return o.DestinationContract, true
}

// HasDestinationContract returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasDestinationContract() bool {
	if o != nil && !IsNil(o.DestinationContract) {
		return true
	}

	return false
}

// SetDestinationContract gets a reference to the given OracleStatusRequest200ResponseDestinationContract and assigns it to the DestinationContract field.
func (o *OracleStatusResponse) SetDestinationContract(v OracleStatusRequest200ResponseDestinationContract) {
	o.DestinationContract = &v
}

// GetEventOfInterest returns the EventOfInterest field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetEventOfInterest() OracleStatusRequest200ResponseEventOfInterest {
	if o == nil || IsNil(o.EventOfInterest) {
		var ret OracleStatusRequest200ResponseEventOfInterest
		return ret
	}
	return *o.EventOfInterest
}

// GetEventOfInterestOk returns a tuple with the EventOfInterest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetEventOfInterestOk() (*OracleStatusRequest200ResponseEventOfInterest, bool) {
	if o == nil || IsNil(o.EventOfInterest) {
		return nil, false
	}
	return o.EventOfInterest, true
}

// HasEventOfInterest returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasEventOfInterest() bool {
	if o != nil && !IsNil(o.EventOfInterest) {
		return true
	}

	return false
}

// SetEventOfInterest gets a reference to the given OracleStatusRequest200ResponseEventOfInterest and assigns it to the EventOfInterest field.
func (o *OracleStatusResponse) SetEventOfInterest(v OracleStatusRequest200ResponseEventOfInterest) {
	o.EventOfInterest = &v
}

// GetWriteFunction returns the WriteFunction field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetWriteFunction() OracleStatusRequest200ResponseWriteFunction {
	if o == nil || IsNil(o.WriteFunction) {
		var ret OracleStatusRequest200ResponseWriteFunction
		return ret
	}
	return *o.WriteFunction
}

// GetWriteFunctionOk returns a tuple with the WriteFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetWriteFunctionOk() (*OracleStatusRequest200ResponseWriteFunction, bool) {
	if o == nil || IsNil(o.WriteFunction) {
		return nil, false
	}
	return o.WriteFunction, true
}

// HasWriteFunction returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasWriteFunction() bool {
	if o != nil && !IsNil(o.WriteFunction) {
		return true
	}

	return false
}

// SetWriteFunction gets a reference to the given OracleStatusRequest200ResponseWriteFunction and assigns it to the WriteFunction field.
func (o *OracleStatusResponse) SetWriteFunction(v OracleStatusRequest200ResponseWriteFunction) {
	o.WriteFunction = &v
}

// GetTasks returns the Tasks field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetTasks() []OracleStatusRequest200ResponseTasksInner {
	if o == nil || IsNil(o.Tasks) {
		var ret []OracleStatusRequest200ResponseTasksInner
		return ret
	}
	return o.Tasks
}

// GetTasksOk returns a tuple with the Tasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetTasksOk() ([]OracleStatusRequest200ResponseTasksInner, bool) {
	if o == nil || IsNil(o.Tasks) {
		return nil, false
	}
	return o.Tasks, true
}

// HasTasks returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasTasks() bool {
	if o != nil && !IsNil(o.Tasks) {
		return true
	}

	return false
}

// SetTasks gets a reference to the given []OracleStatusRequest200ResponseTasksInner and assigns it to the Tasks field.
func (o *OracleStatusResponse) SetTasks(v []OracleStatusRequest200ResponseTasksInner) {
	o.Tasks = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *OracleStatusResponse) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OracleStatusResponse) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *OracleStatusResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *OracleStatusResponse) SetStatus(v string) {
	o.Status = &v
}

func (o OracleStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OracleStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaskID) {
		toSerialize["taskID"] = o.TaskID
	}
	if !IsNil(o.OriginNetwork) {
		toSerialize["originNetwork"] = o.OriginNetwork
	}
	if !IsNil(o.DestinationNetwork) {
		toSerialize["destinationNetwork"] = o.DestinationNetwork
	}
	if !IsNil(o.OriginContract) {
		toSerialize["originContract"] = o.OriginContract
	}
	if !IsNil(o.DestinationContract) {
		toSerialize["destinationContract"] = o.DestinationContract
	}
	if !IsNil(o.EventOfInterest) {
		toSerialize["eventOfInterest"] = o.EventOfInterest
	}
	if !IsNil(o.WriteFunction) {
		toSerialize["writeFunction"] = o.WriteFunction
	}
	if !IsNil(o.Tasks) {
		toSerialize["tasks"] = o.Tasks
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableOracleStatusResponse struct {
	value *OracleStatusResponse
	isSet bool
}

func (v NullableOracleStatusResponse) Get() *OracleStatusResponse {
	return v.value
}

func (v *NullableOracleStatusResponse) Set(val *OracleStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOracleStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOracleStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOracleStatusResponse(val *OracleStatusResponse) *NullableOracleStatusResponse {
	return &NullableOracleStatusResponse{value: val, isSet: true}
}

func (v NullableOracleStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOracleStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


